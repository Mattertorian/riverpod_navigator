import 'package:riverpod/riverpod.dart';
import 'package:riverpod_navigator/riverpod_navigator.dart';
import 'package:test/test.dart';

// ignore: avoid_relative_lib_imports
import '../lib/src/lesson03/lesson03.dart';

ProviderContainer createContainer() {
  final res = ProviderContainer(overrides: [
    riverpodNavigatorCreatorProvider.overrideWithValue(AppNavigator.new),
  ]);
  addTearDown(res.dispose);
  return res;
}

Future printElapsed(Future run()) async {
  final start = DateTime.now();
  await run();
  print('${DateTime.now().difference(start).inMilliseconds} msec');
}

void main() {
  test('navigation test', () async {
    final container = createContainer();
    final navigator = container.read(riverpodNavigatorProvider) as AppNavigator;

    //********** test without the need to log in (book with even id only)
    await printElapsed(() => navigator.toBook(id: 0));
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home/books/book;id=0');

    await printElapsed(() => navigator.toBooks());
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home/books');

    await printElapsed(() => navigator.toHome());
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home');

    await printElapsed(() => navigator.pop());
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home');

    await printElapsed(() => navigator.toBook(id: 2));
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home/books/book;id=2');

    await printElapsed(() => navigator.pop());
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home/books');

    await printElapsed(() => navigator.push(BookSegment(id: 4)));
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home/books/book;id=4');

    await printElapsed(() => navigator.replaceLast(BookSegment(id: 0)));
    await container.pump();
    expect(navigator.debugTypedPath2String(), 'home/books/book;id=0');

    //********** log in tests

    return;
  });
}
